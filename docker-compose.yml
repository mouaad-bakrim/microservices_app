version: '3.9'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: micro_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # ✅ port externe changé
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d micro_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  auth_service:
    build: ./auth_service
    container_name: auth_service
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    restart: unless-stopped

  achat_service:
    build: ./achat_service
    container_name: achat_service
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - db
    restart: unless-stopped

  vente_service:
    build: ./vente_service
    container_name: vente_service
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8002:8000"
    env_file:
      - .env
    depends_on:
      - db
    restart: unless-stopped

  stock_service:
    build: ./stock_service
    container_name: stock_service
    command: python app.py
    ports:
      - "8003:8000"
    env_file:
      - .env
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth_service
      - achat_service
      - vente_service
      - stock_service
    restart: unless-stopped

volumes:
  postgres_data:
